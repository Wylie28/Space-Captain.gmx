<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if vibrator is available on device

// Haptics_HasVibrator() will return 1 if vibrator is available, 0 otherwise
vibrator = Haptics_HasVibrator(); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for tap and then vibrate

if(vibrator) // this variable is set in the create event
{
  if(mouse_check_button_pressed(mb_left))
  {
    // Vibrate for 100 milliseconds
    // -1 as argument will vibrate indefinitely, use Haptics_StopVibration() to stop
    // ---------------------------------------
    //Haptics_Vibrate(100);
    
    
    // Vibrate for 300 milliseconds at low intensity
    // Intensity: 1=low, 2, 3, 4, 5=full
    // -1 as the first argument will vibrate indefinitely, use Haptics_StopVibration() to stop
    // ---------------------------------------
    //Haptics_VibrateIntensity(300, 1);
    
    
    // Haptic patterns 
    // The first one: vibrate 50ms, pause 100ms, vibrate 50ms
    // ---------------------------------------
    //Haptics_Pattern2(50,100,50);
    //Haptics_Pattern3(50,100,50,100,50);
    //Haptics_Pattern4(50,50,100,50,150,50,200);
    
    
    // Haptic patterns from a comma delimited string (for longer and more advanced patterns)
    // vibrate, pause, vibrate, pause, vibrate etc.
    // ---------------------------------------
    Haptics_PatternString("50,30,70,30,90,30,110,30,130");
    
    
    // Same as above but pattern will be repeated until Haptics_StopVibration() is called
    // ---------------------------------------
    //Haptics_PatternStringRepeat("50,30,70,30,90,30,110,30,130");
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
