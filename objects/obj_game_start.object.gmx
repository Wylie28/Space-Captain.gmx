<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next()

if global.online = 0
    instance_destroy()
    
if os_type = os_windows
   window_set_fullscreen(true)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("packet recieved")
type_event = ds_map_find_value(async_load, "type")
    switch (type_event)
    {
        case network_type_data:
            buffer = ds_map_find_value(async_load, "buffer")
            buffer_seek(buffer,buffer_seek_start,0)
            scr_packet_client(buffer)
        break;
            
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
application_surface_enable(true)
global.vibrator = Haptics_HasVibrator();

global.androidDebug = 0
global.UIeditorslider = 0

global.keymap[0] = "Q"
global.keymap[1] = "W"
global.keymap[2] = "E"
global.keymap[3] = "A"
global.keymap[4] = "S"
global.keymap[5] = "D"

global.zone = 1
global.ship = 1
global.game_mode = "Normal"
global.levelcount[0] = 4
global.levelcount[1] = 15
global.levelcount[2] = 3
global.levelcount[3] = 10
global.levelcount[4] = 3
global.levelcount[100] = 15
global.scroll = 0

global.zoom_start = 1
global.game_speed = .8

global.last_level = rm_menu
global.time_mode = 0

//surface_save_part( application_surface, "test.png", view_xview[0], view_yview[0], view_wview[0], view_hview[0] )
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Options
global.options_file = "options"

ini_open(global.options_file)
    global.music_play = ini_read_real("music","play",1)
    global.master_volume = ini_read_real("master","volume",1)
    global.music_volume = ini_read_real("music","volume",1)
    global.sound_effect_volume = ini_read_real("sound","volume",1)
    global.vibration_collision = ini_read_real("vibration","collision",1)
    global.assist_mode = ini_read_real("assist_mode","toggle",0)
    global.controls_custom = ini_read_real("controls","custom",0)
    global.controls_type = ini_read_real("controls","type",0)
    global.controls_throttle = ini_read_real("controls","throttle",0)
    global.controls_vibration = ini_read_real("controls","vibration",1)
    global.controls_vector = ini_read_real("controls","vector",0)
    global.control_mirror = ini_read_real("controls","mirror",0)
    global.alternate_key = ini_read_real("controls","alternate_key",0)
    global.zoom_toggle = ini_read_real("camera","zoom",1)
    global.pan_toggle = ini_read_real("camera","pan",1)
ini_close()

global.fric = 0
global.slow = 0
global.stop = 0
global.die = 0
global.gun = 0
global.ui_top = 1440 - 192 - 64
global.ui_top2 = 164
global.ui_left = 2560 - 192 - 64

if global.music_play = 1
{
    global.music = audio_play_sound(sound1,1,1)
    audio_sound_gain(global.music,global.master_volume * global.music_volume,0)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save Changes
ini_open("save_change")
global.normal_stars_file = "alpha_stars3"
global.normal_times_file = "alpha_times3"
global.sandbox_file = "alpha_sandbox3"
global.sandbox_ship_file = "alpha_sandbox_ship1"
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Network
global.online = 0
if os_is_network_connected()
{   
    alarm[0] = 240
    type = network_socket_tcp

    size = 1024
    type = buffer_fixed
    alignment = 1
    global.buffer = buffer_create(size,type,alignment)
    
    ip = "184.18.55.74"//"127.0.0.1" //"184.18.55.74"
    port = 777
    global.socket = network_create_socket(type)
    network_set_config(network_config_connect_timeout,240)
    connection = network_connect(global.socket, ip, port)
}
else
{
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.zone = 1
global.level = 1
global.record = 77.77

send_record()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
