<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Modifiers
global.power_curve = 1
global.slider_deadzone = 30
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
clicked = 0
mouse_device = -1
sliderx = 0
prev_sliderx = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow View
if global.UIeditorslider = 1
    UIEditorSlider()

image_xscale = global.zoom
image_yscale = global.zoom

x = view_xview[0] + round(drawx * global.zoom)
y = view_yview[0] + round(view_hview[0] - (drawy * global.zoom))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Device
//Check all presses
for(var i=0; i&lt;8; i++)
{
    if device_mouse_check_button_pressed(i, mb_left)
    {
        if point_in_rectangle( device_mouse_x(i), device_mouse_y(i), bbox_left, bbox_top, bbox_right, bbox_bottom)
        {
            clicked = 1
            mouse_device = i
            if global.controls_vibration
                Haptics_VibrateIntensity(100, 2)
        }
    }
}

if clicked = 1
{
    //Slider Held
    if device_mouse_check_button(mouse_device, mb_left)
    {
        if point_in_rectangle( device_mouse_x(mouse_device), device_mouse_y(mouse_device), bbox_left-global.slider_deadzone, bbox_top-global.slider_deadzone, bbox_right+global.slider_deadzone, bbox_bottom+global.slider_deadzone)
        {
            if dir = "x"
                sliderx = device_mouse_x(mouse_device) - x
            if dir = "y"
                sliderx = (device_mouse_y(mouse_device) - y) * -1
        }
    }
    
    //Slider Released
    if device_mouse_check_button_released(mouse_device, mb_left)
    {
        if (global.controls_throttle = 0)
        {
            sliderx = 0
            prev_sliderx = 0
        }
        
        clicked = 0
        mouse_device = -1
        
        if global.controls_vibration
            Haptics_VibrateIntensity(100, 1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deadzone
thrust = undefined
if abs(sliderx) &lt;= global.slider_deadzone
{
    sliderx = 0
    thrust = 0
    if abs(prev_sliderx) &gt; global.slider_deadzone
       Haptics_VibrateIntensity(50, 2)
}  
    
if sliderx &gt; 512 - global.slider_deadzone
{
    sliderx = 512
    thrust = 1
}
    
if sliderx &lt; -512 + global.slider_deadzone
{
    sliderx = -512
    thrust = -1
}
    
prev_sliderx = sliderx
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thrust
if thrust = undefined
{
    actual = abs(sliderx)-global.slider_deadzone
    total = 512 - (2 * global.slider_deadzone)
    thrust =  actual/total
}

neg = 1
if sliderx &lt; 0
    neg = -1
if instance_exists(obj_game_over) or instance_exists(obj_win)
    global.thrust[tid] = 0
else
    global.thrust[tid] = power(abs(thrust),global.power_curve) * neg
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Bar
if dir = "x"
    draw_sprite(spr_slider_bar_hor,0,x+sliderx,y)
if dir = "y"
    draw_sprite(spr_slider_bar_vert,0,x,y+(sliderx * -1))

//draw_sprite_ext(mask_index,0,x,y,1,1,0,c_aqua,0.5);   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
