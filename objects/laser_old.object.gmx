<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_laser_mount</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_obstacle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check in view
view = 0
if (point_in_rectangle(x+ox, y+oy, view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0]))
   view = 1
   
dx = lengthdir_x(max_dist,angle)
dy = lengthdir_y(max_dist,angle)
if (point_in_rectangle(x+ox+dx, y+oy+dy, view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0]))
   view = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for interupt
if view = 1
{
    calc = 0
    dx = lengthdir_x(max_dist,angle)
    dy = lengthdir_y(max_dist,angle)
    if ((collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true)!= noone) or (collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_solid,true,true)!= noone))
    {
        dx = lengthdir_x(draw_dist+1,angle)
        dy = lengthdir_y(draw_dist+1,angle)
        if ((collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true)!= noone) or (collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_solid,true,true)!= noone))
            ninterupt = 1
        else
            ninterupt = 0
            
        dx = lengthdir_x(draw_dist-1,angle)
        dy = lengthdir_y(draw_dist-1,angle)
        if ((collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true)!= noone) or (collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_solid,true,true)!= noone))
            ninterupt2 = 1
        else
            ninterupt2 = 0
    }
    else
        if draw_dist != max_dist
            calc = 1
        
    if ninterupt != ointerupt or ninterupt2 != ointerupt2
        calc = 1
    
    if calc = 1
    {
        col_ship = 0
        draw_dist = 0
        col_dist = 0
        dx = lengthdir_x(1,angle)
        dy = lengthdir_y(1,angle)
        while(collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_solid,true,true) = noone)
        {
            if col_ship = 0 and collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true) = noone
                draw_dist += 1
            else
                col_ship = 1
            col_dist += 1
            dx = lengthdir_x(col_dist,angle)
            dy = lengthdir_y(col_dist,angle)
        }
        draw_dist -= 1
    }
    
    ointerupt = ninterupt
    ointerupt2 = ninterupt2
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for ship
if view = 1
{
    if ship = 1 or fire = 1
    {
        dx = lengthdir_x(col_dist,angle)
        dy = lengthdir_y(col_dist,angle)
        if collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true) = noone
        {
            if ship = 1
            {
                fire_count = count_off
                fire = 0
                ship = 0
            }
        }
        else
        {
            if fire = 1
            {
                with (obj_ship)
                    lose_star()
                ship = 1
                display = 3
                fire = 0
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire
if fire_count = 0
{
    if fire = 0
        fire_count = count_on
        
    if fire = 1
        fire_count = count_off
        
    switch (fire)
    {
        case 0: fire = 1; break;
        case 1: fire = 0; break;
    } 
}

if ship = 0
    fire_count -= 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Alarm
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intialization
ox = lengthdir_x(3,angle)
oy = lengthdir_y(3,angle)
draw_dist = 0
col_dist = 0
display = 0
ship = 0
fire_count = 0
ointerupt = 0
ointerupt2 = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Max
col_ship = 0
dx = lengthdir_x(1,angle)
dy = lengthdir_y(1,angle)
while(collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_solid,true,true) = noone)
{
    if collision_line(x+ox,y+oy,x+ox+dx,y+oy+dy,obj_ship,true,true) = noone and col_ship = 0
        draw_dist += 1
    else
        col_ship = 1
    col_dist += 1
    dx = lengthdir_x(col_dist,angle)
    dy = lengthdir_y(col_dist,angle)
}

max_dist = col_dist
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_red)

if (fire = 1 and ship = 0 and view = 1) or display &gt; 0
{
    dx = lengthdir_x(draw_dist,angle)
    dy = lengthdir_y(draw_dist,angle)
    draw_line_width(x+ox, y+oy, x+ox+dx, y+oy+dy, 3)
    if display &gt; 0 
        display -= 1
}

draw_self()
//draw_text(x,y,string(ointerupt))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
