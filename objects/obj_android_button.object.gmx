<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
clicked = 0
mouse_device = -1
alarm[0] = 1
throttle = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.control_mirror = 1
{
    temp = right
    right = 2560 - left
    left = 2560 - temp
}

with instance_create(0,0,obj_vector_indicator)
{
    drawx = ((other.right - other.left) / 2) + other.left
    drawy = 1440 - (((other.bottom - other.top) / 2) + other.top)
    angle = other.angle
    rot = other.rot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow View
if global.UIeditorslider = 1
    UIEditorSlider()

//image_xscale = global.zoom
//image_yscale = global.zoom

//x = view_xview[0] + round(drawx * global.zoom)
//y = view_yview[0] + round(view_hview[0] - (drawy * global.zoom))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Device
for(var i=0; i&lt;8; i++)
{
    if device_mouse_check_button_pressed(i, mb_left)
    {
        if point_in_rectangle( device_mouse_x(i), device_mouse_y(i), view_xview[0] + (left * global.zoom), view_yview[0] + (top * global.zoom), view_xview[0] + (right * global.zoom), view_yview[0] + (bottom * global.zoom))
        {
            clicked = 1
            mouse_device = i
            throttle = 1
            time = 0
            
            if global.controls_vibration
                Haptics_VibrateIntensity(50, 2)
        }
    }
}

if clicked = 1
{
    if device_mouse_check_button_released(mouse_device, mb_left)
    {
        clicked = 0
        mouse_device = -1
        throttle = 0
        time = 31
        global.thrust[tid] = 0
        
        if global.controls_vibration
            Haptics_VibrateIntensity(50, 1)
    }
    
    if time = 30
        throttle = 1
        
    global.thrust[tid] = throttle
    time += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(make_color_rgb(128,128,128))

if top = global.ui_top
{
    if left != 0
        draw_line_width(view_xview[0]+(left * global.zoom), view_yview[0]+(top * global.zoom), view_xview[0]+(left * global.zoom), view_yview[0]+(bottom * global.zoom), 5*global.zoom)
    if right != 2560
        draw_line_width(view_xview[0]+(right * global.zoom), view_yview[0]+(top * global.zoom), view_xview[0]+(right * global.zoom), view_yview[0]+(bottom * global.zoom), 5*global.zoom)
}

if left = global.ui_left
{
    if top != global.ui_top2
        draw_line_width(view_xview[0]+(left * global.zoom),view_yview[0]+(top * global.zoom),view_xview[0]+(right * global.zoom),view_yview[0]+(top * global.zoom), 5*global.zoom)
    if bottom != 1440
        draw_line_width(view_xview[0]+(left * global.zoom),view_yview[0]+(bottom * global.zoom),view_xview[0]+(right * global.zoom),view_yview[0]+(bottom * global.zoom), 5*global.zoom)
}

if clicked = 1
draw_sprite_ext(spr_android_button_hit,0,view_xview[0]+(left * global.zoom), view_yview[0]+(top * global.zoom),right - left, bottom - top,0,image_blend,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
