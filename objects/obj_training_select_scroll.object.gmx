<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_level_select_scroll</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.uiscroll = 0
scrollmax = 64 * 32
initx = 0
initscroll = 0
mouse_device = -1
scroll = 0
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Device
//Check all presses
for(var i=0; i&lt;8; i++)
{
    if device_mouse_check_button_pressed(i, mb_left)
    {
        if point_in_rectangle( device_mouse_x(i), device_mouse_y(i), bbox_left, bbox_top, bbox_right, bbox_bottom)
        {
            mouse_device = i
            initx = device_mouse_x(i)
            initscroll = global.uiscroll
        }
    }
}
//Held
if device_mouse_check_button(mouse_device, mb_left)
    {
        if point_in_rectangle( device_mouse_x(mouse_device), device_mouse_y(mouse_device), bbox_left, bbox_top, bbox_right, bbox_bottom)
        {
            mx = device_mouse_x(mouse_device)
            if abs(mx - initx) &gt; 8
            {
                scroll = 1
                if ((initscroll + mx - initx &lt;= 0) and (initscroll + mx - initx &gt;= 0 - scrollmax))
                    global.uiscroll = initscroll + mx - initx
                else if initscroll + mx - initx &gt; 0
                {
                    initx = mx
                    initscroll = 0
                    global.uiscroll = 0
                }
                else if initscroll + mx - initx &lt; 0 - scrollmax
                {
                    initx = mx
                    initscroll = -scrollmax
                    global.uiscroll = -scrollmax    
                }
            }
        }
    }
    
//Released
if device_mouse_check_button_released(mouse_device, mb_left)
    {
        if global.uiscroll &gt; 0
            global.uiscoll = 0
        scroll = 0
        mouse_device = -1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
