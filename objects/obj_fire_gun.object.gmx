<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_digital_button</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
mouse_device = -1
drawx = 1280
if global.ship = 5 or global.ship = 16
draw_x = 128
drawy = 32
mousex = 0
mousey = 0
clicked = 0
mouse_device = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow View
image_xscale = global.zoom
image_yscale = global.zoom

x = view_xview[0] + round(drawx * global.zoom)

if (global.controls_type = 2) and ((global.ship = "2") or (global.ship = "A"))
    y = view_yview[0] + ((1280 - drawy) * global.zoom)
else
    y = view_yview[0] + ((1440 - drawy) * global.zoom)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Device Fixed
if obj_gun.fixed = 1
    for(var i=0; i&lt;8; i++)
    {
        if device_mouse_check_button_pressed(i, mb_left)
        {
            if point_in_rectangle( device_mouse_x(i), device_mouse_y(i), view_xview[0] * global.zoom, view_yview[0] * global.zoom, (view_xview[0] + view_wview[0] - 192 - 64) * global.zoom, (view_yview[0] + view_hview[0] - 192 - 64) * global.zoom)
            if obj_gun.reload = 0
            {
                obj_gun.reload = 45
                if instance_exists(obj_gun2)
                {
                    with(obj_gun2)
                    {
                        with (instance_create(x,y,obj_bullet))
                        {
                            phy_rotation = -other.image_angle
                            phy_speed_x = lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                            phy_speed_y = lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                        }
                        
                        with (instance_create(x,y,obj_bullet))
                        {
                            phy_rotation = -other.image_angle + 180
                            phy_speed_x = -lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                            phy_speed_y = -lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                        }
                    }
                }
                else if instance_exists(obj_gun)
                {
                    with(obj_gun)
                    {
                        with (instance_create(x,y,obj_bullet))
                        {
                            phy_rotation = -other.image_angle
                            phy_speed_x = lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                            phy_speed_y = lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                        }
                        
                        with (obj_ship)
                        {
                            phy_speed_x += -lengthdir_x(1,other.image_angle)
                            phy_speed_y += -lengthdir_y(1,other.image_angle)
                        }
                    }
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Device Gimballed
if obj_gun.fixed = 0
{
    for(var i=0; i&lt;8; i++)
    {
        if device_mouse_check_button_pressed(i, mb_left)
            if point_in_rectangle( device_mouse_x(i), device_mouse_y(i), view_xview[0] * global.zoom, view_yview[0] * global.zoom, (view_xview[0] + view_wview[0] - 192 - 64) * global.zoom, (view_yview[0] + view_hview[0] - 192 - 64) * global.zoom)
            {
                clicked = 1
                mouse_device = i
                mousex = device_mouse_x(mouse_device)
                mousey = device_mouse_y(mouse_device)
            }
    }
    
    if clicked = 1
    {
        if device_mouse_check_button(mouse_device, mb_left)
        {
            angle = point_direction(mousex,mousey, device_mouse_x(mouse_device),device_mouse_y(mouse_device))
            if abs(mousex - device_mouse_x(mouse_device)) &gt; 7
                if abs(mousey - device_mouse_y(mouse_device)) &gt; 7
                    with(obj_gun)
                        image_angle = other.angle
        }
        
        if device_mouse_check_button_released(mouse_device, mb_left)
        {
            clicked = 0
            if instance_exists(obj_gun2)
            {
                with(obj_gun2)
                {
                    with (instance_create(x,y,obj_bullet))
                    {
                        phy_rotation = -other.image_angle
                        phy_speed_x = lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                        phy_speed_y = lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                    }
                    
                    with (instance_create(x,y,obj_bullet))
                    {
                        phy_rotation = -other.image_angle + 180
                        phy_speed_x = -lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                        phy_speed_y = -lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                    }
                }
            }
            else if instance_exists(obj_gun)
            {
                with(obj_gun)
                {
                    with (instance_create(x,y,obj_bullet))
                    {
                        phy_rotation = -other.image_angle
                        phy_speed_x = lengthdir_x(25,other.image_angle) + obj_ship.phy_speed_x
                        phy_speed_y = lengthdir_y(25,other.image_angle) + obj_ship.phy_speed_y
                    }
                    
                    with (obj_ship)
                    {
                        phy_speed_x += -lengthdir_x(1,other.image_angle)
                        phy_speed_y += -lengthdir_y(1,other.image_angle)
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite(spr_crosshair,0,x,y-96)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
