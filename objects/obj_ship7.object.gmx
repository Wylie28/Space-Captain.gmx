<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship7</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ship</parentName>
  <maskName>spr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit
phy_fixed_rotation = 1
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
force = 2000
thrusters_sprite = spr_ship7
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thruster Properties
i = 0 //Right
thrustProp[i,ikey] = "D"
thrustProp[i,ikey2] = "A"
thrustProp[i,iangle] = 0
thrustProp[i,irot] = 0

i = 1 //Up-Left
thrustProp[i,ikey] = "W"
thrustProp[i,ikey2] = "S"
thrustProp[i,iangle] = 135
thrustProp[i,irot] = 0

i = 2 //Left
thrustProp[i,ikey] = "A"
thrustProp[i,ikey2] = "D"
thrustProp[i,iangle] = 180
thrustProp[i,irot] = 0

i =3 //Down-Right
thrustProp[i,ikey] = "S"
thrustProp[i,ikey2] = "W"
thrustProp[i,iangle] = 315
thrustProp[i,irot] = 0

thrusterCount = i
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sliders
if os_type != os_windows or global.androidDebug = 1
{
    instance_create(0,1440,obj_android_overlay)

    with instance_create(0,0,obj_android_button) //Up-Left
    {
        sliderProp(1,1)
        left = global.ui_left
        right = 2560
        top = global.ui_top2
        bottom = 1440 - 416
    }
    
    with instance_create(0,0,obj_android_button) //Down-Right
    {
        sliderProp(3,1)
        left = global.ui_left
        right = 2560
        top = 1440 - 416
        bottom = 1440
    }
    
    with instance_create(0,0,obj_android_button) //Left
    {
        sliderProp(2,1)
        left = 0
        right = 416
        top = global.ui_top
        bottom = 1440
    }
    
    with instance_create(0,0,obj_android_button) //Right
    {
        sliderProp(0,1)
        left = 416
        right = global.ui_left
        top = global.ui_top
        bottom = 1440
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keygrid
keygrid()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Right
xcomp = lengthdir_x(force*global.thrust[0],0)
ycomp = lengthdir_y(force*global.thrust[0],0)
physics_apply_local_force(0, 0, xcomp, ycomp)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Up-Left
xcomp = lengthdir_x(force*global.thrust[1],135)
ycomp = lengthdir_y(force*global.thrust[1],135)
physics_apply_local_force(0, 0, xcomp, ycomp)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Left
xcomp = lengthdir_x(force*global.thrust[2],180)
ycomp = lengthdir_y(force*global.thrust[2],180)
physics_apply_local_force(0, 0, xcomp, ycomp)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Down-Right
xcomp = lengthdir_x(force*global.thrust[3],315)
ycomp = lengthdir_y(force*global.thrust[3],315)
physics_apply_local_force(0, 0, xcomp, ycomp)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard
keyboard()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit
//if (stars &lt;= 1 and collision_counter = 0)
    //phy_fixed_rotation = 0
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Thrusters

draw_sprite_ext(thrusters_sprite,0,x,y,1,1,image_angle,image_blend,image_alpha)

if global.thrust[0] &gt; 0
    draw_sprite_ext(thrusters_sprite,1,x,y,1,1,image_angle,image_blend,image_alpha)
if global.thrust[0] &lt; 0
    draw_sprite_ext(thrusters_sprite,3,x,y,1,1,image_angle,image_blend,image_alpha)
    
if global.thrust[1] &gt; 0
    draw_sprite_ext(thrusters_sprite,2,x,y,1,1,image_angle,image_blend,image_alpha)
    
if global.thrust[2] &gt; 0
    draw_sprite_ext(thrusters_sprite,3,x,y,1,1,image_angle,image_blend,image_alpha)
    
if global.thrust[3] &gt; 0
    draw_sprite_ext(thrusters_sprite,4,x,y,1,1,image_angle,image_blend,image_alpha)
if global.thrust[3] &lt; 0
    draw_sprite_ext(thrusters_sprite,1,x,y,1,1,image_angle,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>97,33</point>
    <point>97,81</point>
    <point>81,97</point>
    <point>33,97</point>
    <point>33,49</point>
    <point>49,33</point>
  </PhysicsShapePoints>
</object>
